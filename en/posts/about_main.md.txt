---
title: void main(...
date: 2021-01-25
# lastmod: 2020-12-09
draft: false
# categories: ["category1"]
tags: ["main", "int", "void", "cpp"]
description: "З якого дива  `Zoom` поширює .debs, які залежать від `ibus`"
# cover: "https://images.pexels.com/photos/4226140/pexels-photo-4226140.jpeg?crop=entropy&cs=srgb&dl=pexels-anna-shvets-4226140.jpg&fit=crop&fm=jpg&h=426&w=640"
categories:
- tutorials
---

### void or not void

Вивчаючи `C++` я зустрічав багато прикладів де головною функцією в нашій програмі була функція яка носить назву `main`. Гугливши я взагалі наткнувся на станаттю, що `main` не обов'язково функція, а... взагалі (я ще не зрозумів що).

Почнемо з `void`

#### void main(void)

```c
void main(void)
```

#### int main(void)
#### int main()

Такий запис функції є коректним для `C`. Функція запускається без параметрів та нічого не повертає системі

Коли я встановив zoom в мене в системному лотку зник індикатор перемикача розкладки клавіатури та з'явилася іконка якої там раніше не було. Після завершення zoom мітингу, я видалив зайву іконку . Ibus прощавай... Та при черговій потребі запустити zoom у системі, я його не виявив. Довелося знову завантажувати пакет.
І знову в ситемному лотку іконка якої там не повинно бути  :anguished:

Починаю гуглити. І... перша ж стаття...

>З якого дива  `Zoom` поширює .debs, які залежать від `ibus` .ibus - це пакет "intelligent input bus", і, наскільки мені відомо, може використовуватися для введення смайлів у чаті чи щось таке ?? Але інакше насправді не є залежністю пакета `Zoom`. Я це багато перевірив ... клієнт чудово працює і без цього.
>
>Коли я встановив `ibus` разом із пакетом `Zoom`, я помітив, що `ibus` часто з’їдає ціле ядро ​​процесора. Я впевнений, що це помилка пакету чи послуги `ibus`, але у мене немає сил намагатися це виправити. Якщо це не важка залежність, `Zoom` не повинна спочатку залежати від неї.
>
>У будь-якому випадку, ось як можна перепакувати `Zoom` .deb, щоб видалити залежність `ibus`:
>
>```zsh
>scratch=$(mktemp -d)
>
># Витяг вмісту пакету
>dpkg -x zoom_amd64.deb $scratch
>
># Витяг управління інформацією про пакет
>dpkg -e zoom_amd64.deb $scratch/DEBIAN
>
># Видаліть залежність ibus
>sed -i -E 's/(ibus, |, ibus)//' $scratch/DEBIAN/control
>
># Відновіть .deb
>dpkg -b $scratch patched_zoom_amd64.deb
>```
>Тепер ви можете встановити виправлене .deb за допомогою
>```zsh
>dpkg -i patched_zoom_amd64.deb
>```
>Виправлення вгору за течією полягало б у тому, щоб `Zoom` перемістив `ibus` "Залежність" до "Рекомендує", але вони не бажають це робити вже більше року.
>Але почекайте, яка версія навіть мій пакет?
>
>До речі, ви також могли помітити, що завантаження клієнта `Zoom` не відповідають стандартній схемі іменування пакетів Debian (тобто включаючи версію в ім'я файлу). Якщо ви не впевнені, яка версія завантаженого вами пакета `zoom_amd64.deb`, ви можете швидко витягти цю інформацію за допомогою dpkg-deb:
>
>```zsh
>dpkg-deb -I zoom_amd64.deb | grep Version
># Version: 5.4.56259.1207
>```

Скористався  запропонованим алгоритмом видалення Ibus. Збережу аби знову не шукати.

[Оригінал статті](https://hashman.ca/zoom/)
